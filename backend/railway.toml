# Railway Configuration for Backend ONLY - ULTRA AGGRESSIVE
# This forces Railway to ONLY deploy backend, completely ignoring frontend

[build]
builder = "dockerfile"
dockerfilePath = "Dockerfile.railway.v2"

# Force Docker build with explicit backend context
buildCommand = "docker build -f Dockerfile.railway.v2 --no-cache --build-arg CONTEXT=backend ."

# Force Docker build and completely ignore everything else
[build.docker]
dockerfile = "Dockerfile.railway.v2"
context = "."
ignore = [
    ".nixpacks", 
    "../package.json*", 
    "../package-lock.json*",
    "../frontend",
    "../.git",
    "../.nixpacks",
    "../node_modules",
    "../*"
]

# Explicitly set the build context to backend only
[build.context]
path = "."
exclude = [
    "../package.json*",
    "../package-lock.json*", 
    "../node_modules",
    "../frontend",
    "../.git",
    ".nixpacks",
    "../.nixpacks",
    "../deploy.sh",
    "../cleanup-project.sh",
    "../remove-unused-files.sh",
    "../*"
]

# Force Railway to use this directory only
[project]
root = "."

# Explicitly tell Railway this is a backend-only service
[service]
type = "backend"
framework = "nestjs"
monorepo = false

# Force single service deployment
[deploy]
startCommand = "npm run start:prod"
healthcheckPath = "/health"
healthcheckTimeout = 300
restartPolicyType = "on_failure"
restartPolicyMaxRetries = 3

# Environment variables
[env]
NODE_ENV = "production"
PORT = "3001"
NPM_CONFIG_CACHE = "/tmp/.npm"
NPM_CONFIG_PREFER_OFFLINE = "true"

# Database configuration - these will be set in Railway dashboard
# DB_HOST = "your-railway-mysql-host"
# DB_PORT = "3306"
# DB_USERNAME = "your-railway-mysql-username"
# DB_PASSWORD = "your-railway-mysql-password"
# DB_NAME = "your-railway-mysql-database"

# Frontend URL for CORS
FRONTEND_URL = "https://your-frontend-domain.railway.app"

# File upload configuration
MAX_FILE_SIZE = "10485760"
UPLOAD_PATH = "./uploads"

# OCR Configuration
TESSERACT_LANG = "eng"
TESSERACT_CONFIG = "--oem 3 --psm 6"

